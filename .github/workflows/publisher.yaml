name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  release:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
         include:
          - platform: "windows-latest"
            args: ""

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install frontend dependencies
        run: |
          cd frontend
          npm install 

      - name: Build the app
        id: build
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: "dW50cnVzdGVkIGNvbW1lbnQ6IHJzaWduIGVuY3J5cHRlZCBzZWNyZXQga2V5ClJXUlRZMEl5YUxzWWFKci8zWE4waE9mLzY5UDIzTkVsYXlXUVVNMlhXemhFayszYXJkVUFBQkFBQUFBQUFBQUFBQUlBQUFBQWZ0cHc0Smh4ZjVpQUtyZHJOVTNMVmwvUW1LcFNDK01DVWZBYmNRVUNweGdyV1BGMjhPSk1SMWxQRDIwSVVSZzZNQnJndklTb2FvTjZTa0NRNyttL000a1FLVkRUZ3o2WElpNDNLMnpIS1E3ZE5ZSnJkZUhYMm1KaHpWMlRuU2pkTXJCQzRkc0NFc2M9Cg=="
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: "888@"
        with:
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}