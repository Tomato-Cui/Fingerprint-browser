use serde::{Deserialize, Serialize};
use sqlx::FromRow;

#[derive(Serialize, Deserialize, FromRow, Debug)]
pub struct EnvironmentWithDetails {
    // Fields from Environment
    id: i32,
    uuid: String,
    user_uuid: String,
    team_id: i32,
    proxy_id: Option<i32>,
    fp_info_id: Option<i32>,
    group_id: Option<i32>,
    name: String,
    description: Option<String>,
    default_urls: Option<String>,
    proxy_enable: i8,
    created_at: Option<String>,
    updated_at: Option<String>,
    lasted_at: Option<String>,
    deleted_at: Option<String>,

    fp_id: Option<i32>,
    browser: Option<String>,
    ua: Option<String>,
    os: Option<String>,
    country: Option<String>,
    region: Option<String>,
    city: Option<String>,
    language_type: Option<i32>,
    languages: Option<String>,
    gmt: Option<String>,
    geography: Option<String>,
    geo_tips: Option<i32>,
    geo_rule: Option<i32>,
    longitude: Option<i32>,
    latitude: Option<i32>,
    radius: Option<i32>,
    height: Option<i32>,
    width: Option<i32>,
    fonts_type: Option<i32>,
    fonts: Option<String>,
    font_fingerprint: Option<i32>,
    web_rtc: Option<i32>,
    web_rtc_local_ip: Option<String>,
    canvas: Option<i32>,
    webgl: Option<i32>,
    hardware_acceleration: Option<i32>,
    webgl_info: Option<i32>,
    audio_context: Option<i32>,
    speech_voices: Option<i32>,
    media: Option<i32>,
    cpu: Option<i32>,
    memory: Option<i32>,
    do_not_track: Option<i32>,
    battery: Option<i32>,
    port_scan: Option<i32>,
    white_list: Option<String>,
    fp_created_at: Option<String>,
    fp_updated_at: Option<String>,
    fp_deleted_at: Option<String>,

    // Fields from Proxy
    proxy_kind: Option<String>,
    proxy_host: Option<String>,
    proxy_port: Option<String>,
    proxy_username: Option<String>,
    proxy_password: Option<String>,
    proxy_user_uuid: Option<String>,
    proxy_environment_group_id: Option<i32>,
    proxy_created_at: Option<String>,
    proxy_updated_at: Option<String>,
    proxy_deleted_at: Option<String>,
}

#[derive(Serialize, Deserialize, FromRow, Debug)]
pub struct EnvironmentWithInfo {
    // Fields from Environment
    id: i32,
    uuid: String,
    user_uuid: String,
    team_id: i32,
    proxy_id: Option<i32>,
    fp_info_id: Option<i32>,
    group_id: Option<i32>,
    group_name: Option<String>,
    name: String,
    description: Option<String>,
    default_urls: Option<String>,
    proxy_enable: i8,
    created_at: Option<String>,
    updated_at: Option<String>,
    lasted_at: Option<String>,
    deleted_at: Option<String>,

    fp_id: Option<i32>,
    browser: Option<String>,
    ua: Option<String>,
    os: Option<String>,
    country: Option<String>,
    region: Option<String>,
    city: Option<String>,
    language_type: Option<i32>,
    languages: Option<String>,
    gmt: Option<String>,
    geography: Option<String>,
    geo_tips: Option<i32>,
    geo_rule: Option<i32>,
    longitude: Option<i32>,
    latitude: Option<i32>,
    radius: Option<i32>,
    height: Option<i32>,
    width: Option<i32>,
    fonts_type: Option<i32>,
    fonts: Option<String>,
    font_fingerprint: Option<i32>,
    web_rtc: Option<i32>,
    web_rtc_local_ip: Option<String>,
    canvas: Option<i32>,
    webgl: Option<i32>,
    hardware_acceleration: Option<i32>,
    webgl_info: Option<i32>,
    audio_context: Option<i32>,
    speech_voices: Option<i32>,
    media: Option<i32>,
    cpu: Option<i32>,
    memory: Option<i32>,
    do_not_track: Option<i32>,
    battery: Option<i32>,
    port_scan: Option<i32>,
    white_list: Option<String>,
    fp_created_at: Option<String>,
    fp_updated_at: Option<String>,
    fp_deleted_at: Option<String>,

    // Fields from Proxy
    proxy_kind: Option<String>,
    proxy_host: Option<String>,
    proxy_port: Option<String>,
    proxy_username: Option<String>,
    proxy_password: Option<String>,
    proxy_user_uuid: Option<String>,
    proxy_environment_group_id: Option<i32>,
    proxy_created_at: Option<String>,
    proxy_updated_at: Option<String>,
    proxy_deleted_at: Option<String>,
}
